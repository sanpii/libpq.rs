image: "rust:latest"

stages:
    - lint
    - test

lint:fmt:
    stage: lint
    before_script:
        - rustup component add rustfmt
    script:
        - cargo fmt --all -- --check

.pg: &pg
    stage: test
    before_script:
        - apt update
        - apt install postgresql-common -y
        - /usr/share/postgresql-common/pgdg/apt.postgresql.org.sh -y
        - apt install bc sudo postgresql-$PG postgresql-server-dev-$PG clang valgrind -y
        - sudo -u postgres pg_ctlcluster "$PG" main start
        - sudo -u postgres psql --command "create role root WITH LOGIN SUPERUSER ENCRYPTED PASSWORD '1234';";
        - sudo -u postgres psql --command "create database root with owner root;";
        - export PQ_DSN='host=localhost password=1234'

lint:clippy:
    <<: *pg
    variables:
        MODE: debug
        PG: "16"
    stage: lint
    script:
        - rustup component add clippy
        - cargo clippy --all-targets --all-features -- --deny warnings

test:
    <<: *pg
    parallel:
        matrix:
            - MODE: ['debug', 'release']
              PG: ['9.5', '9.6', '10', '11', '12', '13', '14', '15', '16', '17']
    script: |
        feature=''

        if (( $(echo "$PG >= 11" | bc -l) ))
        then
          feature="v${PG/./_}"
        fi

        if [[ $MODE == "release" ]]
        then
            cargo test --workspace --features "$feature" --release
        else
            cargo test --workspace --features "$feature"
        fi

valgrind:
    <<: *pg
    variables:
        PG: "14"
    script:
        - cargo test --no-run --features "v$PG"
        - valgrind --leak-check=full --error-exitcode=1 $(find target/debug/deps -executable -type f -name 'libpq-*')

mimalloc:
    <<: *pg
    variables:
        PG: "16"
    script: |
        cargo add mimalloc
        sed -i '3 s/^/#[global_allocator] static GLOBAL: mimalloc::MiMalloc = mimalloc::MiMalloc;\n/' src/lib.rs
        cargo test --no-run --features "v$PG"
        valgrind --leak-check=full --error-exitcode=1 $(find target/debug/deps -executable -type f -name 'libpq-*')

arm:
    variables:
        PKG_CONFIG_PATH: "/usr/lib/arm-linux-gnueabihf/pkgconfig"
        PKG_CONFIG_ALLOW_CROSS: "true"
    before_script:
        - rustup target add arm-unknown-linux-gnueabihf
        - apt-get update
        - apt-get install -y curl git build-essential
        - apt-get install -y libc6-armhf-cross libc6-dev-armhf-cross gcc-arm-linux-gnueabihf clang
    script: cargo build --features v15 --target arm-unknown-linux-gnueabihf
