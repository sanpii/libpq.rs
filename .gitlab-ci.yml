image: "rust:latest"

stages:
    - lint
    - test

lint:fmt:
    stage: lint
    before_script:
        - rustup component add rustfmt
    script:
        - cargo fmt --all -- --check

.pg: &pg
    stage: test
    before_script:
        - echo "deb http://apt.postgresql.org/pub/repos/apt buster-pgdg main" > /etc/apt/sources.list.d/pgdg.list
        - curl https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add -
        - apt update
        - apt install bc sudo postgresql-$PG postgresql-server-dev-$PG clang valgrind -y
        - sudo -u postgres pg_ctlcluster "$PG" main start
        - sudo -u postgres psql --command "create role root WITH LOGIN ENCRYPTED PASSWORD '1234';";
        - sudo -u postgres psql --command "create database root with owner root;";
        - export PQ_DSN='host=localhost password=1234'

lint:clippy:
    <<: *pg
    variables:
        MODE: debug
        PG: "14"
    stage: lint
    script:
        - rustup component add clippy
        - cargo clippy --all-features -- --deny warnings
    allow_failure: true

test:
    <<: *pg
    parallel:
        matrix:
            - MODE: ['debug', 'release']
              PG: ['9.5', '9.6', '10', '11', '12', '13', '14']
    script: |
        feature=''

        if (( $(echo "$PG >= 11" | bc -l) ))
        then
          feature="v${PG/./_}"
        fi

        if [[ $MODE == "release" ]]
        then
            cargo test --workspace --features "$feature" --release
        else
            cargo test --workspace --features "$feature"
        fi

valgrind:
    <<: *pg
    variables:
        MODE: debug
        PG: "14"
    script:
      - cargo test --no-run --features "v$PG"
      - valgrind --leak-check=full --error-exitcode=1 $(find target/debug/deps -executable -type f)
